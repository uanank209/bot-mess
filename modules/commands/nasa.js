const axios = require('axios');
const dayTranslations = {
  'Sunday': 'Ch·ªß Nh·∫≠t',
  'Monday': 'Th·ª© Hai',
  'Tuesday': 'Th·ª© Ba',
  'Wednesday': 'Th·ª© T∆∞',
  'Thursday': 'Th·ª© NƒÉm',
  'Friday': 'Th·ª© S√°u',
  'Saturday': 'Th·ª© B·∫£y'
};

const weatherTranslations = {
  'sunny': 'Tr·ªùi N·∫Øng',
  'mostly sunny': 'Nhi·ªÅu N·∫Øng',
  'partly sunny': 'N·∫Øng V√†i N∆°i',
  'rain showers': 'M∆∞a R√†o',
  't-storms': 'C√≥ B√£o',
  'light rain': 'M∆∞a Nh·ªè',
  'mostly cloudy': 'Tr·ªùi Nhi·ªÅu M√¢y',
  'rain': 'Tr·ªùi M∆∞a',
  'heavy t-storms': 'B√£o L·ªõn',
  'partly cloudy': 'M√¢y R·∫£i R√°c',
  'mostly clear': 'Tr·ªùi Trong Xanh',
  'cloudy': 'Tr·ªùi Nhi·ªÅu M√¢y',
  'clear': 'Tr·ªùi Trong Xanh, Kh√¥ng M√¢y'
};

const translateWeather = (weather) => {
  const normalizedWeather = weather.toLowerCase();
  if (weatherTranslations[normalizedWeather]) {
    return weatherTranslations[normalizedWeather];
  } else {
    console.log(`Kh√¥ng c√≥ b·∫£n d·ªãch cho tr·∫°ng th√°i th·ªùi ti·∫øt: ${weather}`);
    return weather; // Gi·ªØ nguy√™n n·∫øu kh√¥ng c√≥ b·∫£n d·ªãch
  }
};

const formatDate = (dateStr) => {
  const [year, month, day] = dateStr.split('-');
  return `${day}/${month}/${year}`;
};

module.exports.config = {
  name: 'nasa',
  version: '1.0.0',
  hasPermission: 0,
  credits: "",
  description: 'Xem d·ª± b√°o th·ªùi ti·∫øt c·ªßa t·ªânh/th√†nh ph·ªë',
  commandCategory: 'Th√†nh Vi√™n',
  usages: [],
  cooldowns: 3,
};

module.exports.run = async ({ api, event, args }) => {
  try {
    const location = args.join(" ");
    if (!location) return api.sendMessage("Nh·∫≠p t·ªânh/tp c·∫ßn xem th·ªùi ti·∫øt", event.threadID);

    const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI(location)}`);
    if (!res.data || res.data.length === 0) {
      return api.sendMessage("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt cho ƒë·ªãa ƒëi·ªÉm n√†y.", event.threadID);
    }

    const data = res.data[0];
    const { location: loc, current, forecast } = data;

    if (!forecast || forecast.length === 0) {
      return api.sendMessage("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt cho ƒë·ªãa ƒëi·ªÉm n√†y.", event.threadID);
    }

    let message = `Th·ªùi ti·∫øt hi·ªán t·∫°i c·ªßa ${loc.name}:\n` +
                  `üå° Nhi·ªát ƒë·ªô: ${current.temperature}¬∞C\n` +
                  `ü§≤ C·∫£m gi√°c nh∆∞: ${current.feelslike}¬∞C\n` +
                  `üó∫Ô∏è Tr·∫°ng th√°i: ${translateWeather(current.skytext)}\n` +
                  `‚ôí ƒê·ªô ·∫©m: ${current.humidity}%\n` +
                  `üí® Gi√≥: ${current.winddisplay}\n\n` +
                  `Th·∫£ c·∫£m x√∫c ‚ù§ ƒë·ªÉ xem d·ª± b√°o th·ªùi ti·∫øt trong 3 ng√†y t·ªõi.`;

    api.sendMessage(message, event.threadID, (err, info) => {
      global.client.handleReaction.push({
        name: this.config.name,
        messageID: info.messageID,
        location: loc.name,
        forecast: forecast,
        author: event.senderID
      });
    });

  } catch (err) {
    api.sendMessage(`ƒê√£ x·∫£y ra l·ªói khi l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt: ${err.message}`, event.threadID);
  }
};

module.exports.handleReaction = async function({ event, api, handleReaction: reaction }) {
  if (event.userID != reaction.author) return;
  if (event.reaction != "‚ù§") return; 

  const { location, forecast } = reaction;

  const today = new Date();
  const nextFiveDays = [];
  for (let i = 0; i < forecast.length; i++) {
    const forecastDate = new Date(forecast[i].date);
    if (forecastDate >= today && nextFiveDays.length < 5) {
      nextFiveDays.push(forecast[i]);
    }
  }

  if (nextFiveDays.length === 0) {
    return api.sendMessage("Kh√¥ng c√≥ d·ªØ li·ªáu th·ªùi ti·∫øt cho 3 ng√†y t·ªõi.", event.threadID);
  }

  let message = `D·ª± b√°o th·ªùi ti·∫øt 3 ng√†y t·ªõi t·∫°i ${location}:\n`;

  for (let i = 0; i < nextFiveDays.length; i++) {
    const day = dayTranslations[nextFiveDays[i].day] || nextFiveDays[i].day;
    const weather = translateWeather(nextFiveDays[i].skytextday);
    const date = formatDate(nextFiveDays[i].date);

    message += `${i + 1}. ${day} - ${date}\n` +
                 `üå° Nhi·ªát ƒë·ªô d·ª± b√°o: t·ª´ ${nextFiveDays[i].low}¬∞C ‚ûù ${nextFiveDays[i].high}¬∞C\n` +
                 `üó∫Ô∏è D·ª± b√°o: ${weather}\n` +
                 `üåß T·ª∑ l·ªá m∆∞a: ${nextFiveDays[i].precip}%\n\n`;
  }

  api.sendMessage(message, event.threadID);
}
